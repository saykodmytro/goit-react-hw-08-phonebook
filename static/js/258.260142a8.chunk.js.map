{"version":3,"file":"static/js/258.260142a8.chunk.js","mappings":"uKACA,MAA4B,6BAA5B,EAAiE,yB,SCCpDA,EAAY,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACjC,OACE,iBAAKC,UAAWC,EAAhB,WACE,eAAID,UAAWC,EAAf,SAA2BH,IAC1BC,IAGN,C,sGCPYG,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,cAAcC,SAASC,KAAjC,EAItBC,EAAuB,SAAAJ,GAAK,OAAIA,EAAMC,cAAcI,MAAxB,EAE5BC,GAAwBC,EAAAA,EAAAA,IACnC,CAACR,EAAgBK,IACjB,SAACF,EAAUG,GACT,OAAOH,EAASG,QAAO,SAAAG,GAAO,OAC5BA,EAAQC,KAAKC,cAAcC,SAASN,EAAOK,cADf,GAG/B,I,UCbH,EAAuB,0BAAvB,EAAwD,0BAAxD,EAA8F,+BAA9F,EAAsI,4B,SCkCtI,EA5BoB,WAClB,IAAME,GAAWC,EAAAA,EAAAA,MACXX,GAAWY,EAAAA,EAAAA,IAAYR,GAM7B,OAJAS,EAAAA,EAAAA,YAAU,WACRH,GAASI,EAAAA,EAAAA,MACV,GAAE,CAACJ,KAGF,eAAIf,UAAWC,EAAf,SACGI,EAASe,OAAS,GACjBf,EAASgB,KAAI,gBAAGC,EAAH,EAAGA,GAAIV,EAAP,EAAOA,KAAMW,EAAb,EAAaA,MAAb,OACX,gBAAavB,UAAWC,EAAxB,WACE,cAAGD,UAAWC,EAAd,SAA8BW,KAC9B,cAAGZ,UAAWC,EAAd,SAA8BsB,KAC9B,mBACEC,KAAK,SACLxB,UAAWC,EACXwB,QAAS,kBAAMV,GAASW,EAAAA,EAAAA,IAAcJ,GAA7B,EAHX,SAIC,aAPMA,EADE,KAepB,E,oBChCD,GAAgB,MAAQ,uBC2BxB,EAtBsB,WACpB,IAAMd,GAASS,EAAAA,EAAAA,IAAYV,GACrBQ,GAAWC,EAAAA,EAAAA,MAOjB,OACE,kBAAOhB,UAAWC,EAAAA,MAAlB,UACE,kBACED,UAAWC,EAAAA,MACXuB,KAAK,OACLG,YAAY,SACZC,MAAOpB,EACPqB,SAZqB,SAAAC,GACzB,IAAMC,EAAiBD,EAAEE,OAAOJ,MAChCb,GAASkB,EAAAA,EAAAA,GAAgBF,GAC1B,KAaF,E,UCPUG,EAAS,eAACC,EAAD,uDAAQ,GAAR,OAClBC,OAAOC,gBAAgB,IAAIC,WAAWH,IAAOI,QAAO,SAACjB,EAAIkB,GAWvD,OARElB,IAFFkB,GAAQ,IACG,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,GAGT,GAAE,GAbe,EClBpB,EAAuB,wBAAvB,EAAuD,yBAAvD,EAAwF,yBAAxF,EAA8H,8BAA9H,EAAsK,2BCgFtK,EA1EkB,WAChB,IAAMzB,GAAWC,EAAAA,EAAAA,MACXX,GAAWY,EAAAA,EAAAA,IAAYf,GAE7B,GAAwByC,EAAAA,EAAAA,UAAS,IAAjC,eAAO/B,EAAP,KAAagC,EAAb,KACA,GAA0BD,EAAAA,EAAAA,UAAS,IAAnC,eAAOpB,EAAP,KAAcsB,EAAd,KA8BMC,EAAe,SAAAhB,GACG,SAAlBA,EAAEE,OAAOpB,KACXgC,EAAQd,EAAEE,OAAOJ,OACU,UAAlBE,EAAEE,OAAOpB,MAClBiC,EAASf,EAAEE,OAAOJ,MAErB,EAED,OACE,kBAAMmB,OAAO,GAAG/C,UAAWC,EAAU+C,SAvBlB,SAAAC,GACnBA,EAAIC,iBAfmB,SAAAC,GACD9C,EAAS+C,MAC7B,SAAAzC,GAAO,OACLA,EAAQC,KAAKC,gBAAkBsC,EAAWvC,KAAKC,eAC/CF,EAAQY,QAAU4B,EAAW5B,KAFxB,IAMP8B,MAAM,4BAAD,OAA6BF,EAAWvC,KAAxC,sBAELG,GAASuC,EAAAA,EAAAA,IAAWH,GAEvB,CAWCI,CANmB,CACjBjC,GAAIY,IACJtB,KAAMA,EACNW,MAAOA,IAITqB,EAAQ,IACRC,EAAS,GACV,EAWC,WACE,mBAAOW,QAAQ,GAAGxD,UAAWC,EAA7B,WACE,cAAGD,UAAWC,EAAd,SAA8B,UAE9B,kBACE4B,SAAUiB,EACVlC,KAAK,OACLY,KAAK,OACLxB,UAAWC,EACX2B,MAAOhB,EACP6C,UAAQ,QAGZ,cAAGzD,UAAWC,EAAd,SAA8B,YAC9B,kBAAOuD,QAAQ,GAAGxD,UAAWC,EAA7B,UACE,kBACE4B,SAAUiB,EACVlC,KAAK,QACLY,KAAK,OACLxB,UAAWC,EACX2B,MAAOL,OAGX,mBAAQC,KAAK,SAASxB,UAAWC,EAAjC,SAA8C,kBAKnD,ECzDD,EAhBkB,WAChB,OACE,4BACE,SAACJ,EAAA,EAAD,CAAWC,MAAM,YAAjB,UACE,SAAC,EAAD,OAEF,SAACD,EAAA,EAAD,CAAWC,MAAM,SAAjB,UACE,SAAC,EAAD,OAEF,SAACD,EAAA,EAAD,CAAWC,MAAM,WAAjB,UACE,SAAC,EAAD,QAIP,ECTD,EARsB,WACpB,OACE,0BACE,SAAC,EAAD,KAGL,C","sources":["webpack://react-homework-template/./src/components/Container/Container.module.css?9f71","components/Container/Container.jsx","redux/contacts/contacts.selector.js","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","../node_modules/nanoid/index.browser.js","webpack://react-homework-template/./src/components/PhoneForm/PhoneForm.module.css?5704","components/PhoneForm/PhoneForm.jsx","components/PhoneBook/Phonebook.jsx","pages/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Container_container__VVOCq\",\"title\":\"Container_title__uuJgB\"};","import css from './Container.module.css';\n\nexport const Container = ({ title, children }) => {\n  return (\n    <div className={css.container}>\n      <h1 className={css.title}>{title}</h1>\n      {children}\n    </div>\n  );\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contactsStore.contacts.items;\nexport const selectContactsIsLoading = state =>\n  state.contactsStore.contacts.isLoading;\nexport const selectContactsError = state => state.contactsStore.contacts.error;\nexport const selectContactsFilter = state => state.contactsStore.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectContactsFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"item\":\"ContactList_item__EZYHO\",\"descrList\":\"ContactList_descrList__lfROM\",\"btnDel\":\"ContactList_btnDel__M+VR9\"};","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/contacts/contacts.selector';\nimport { deleteContact, fetchContacts } from 'redux/contacts/operations';\n\nimport css from './ContactList.module.css';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectVisibleContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ul className={css.list}>\n      {contacts.length > 0 &&\n        contacts.map(({ id, name, phone }) => (\n          <li key={id} className={css.item}>\n            <p className={css.descrList}>{name}</p>\n            <p className={css.descrList}>{phone}</p>\n            <button\n              type=\"button\"\n              className={css.btnDel}\n              onClick={() => dispatch(deleteContact(id))}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Filter_input__N7T3z\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { filteredContact } from 'redux/contacts/contacts.reducer';\nimport { selectContactsFilter } from 'redux/contacts/contacts.selector';\n\nimport css from './Filter.module.css';\n\nexport const Filter = () => {\n  const filter = useSelector(selectContactsFilter);\n  const dispatch = useDispatch();\n\n  const handleFilterChange = e => {\n    const newFilterValue = e.target.value;\n    dispatch(filteredContact(newFilterValue));\n  };\n\n  return (\n    <label className={css.label}>\n      <input\n        className={css.input}\n        type=\"text\"\n        placeholder=\"Search\"\n        value={filter}\n        onChange={handleFilterChange}\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"PhoneForm_form__TuHnD\",\"lable\":\"PhoneForm_lable__6V1DN\",\"input\":\"PhoneForm_input__gtrkg\",\"titleLable\":\"PhoneForm_titleLable__MKS3L\",\"btnForm\":\"PhoneForm_btnForm__wCwNA\"};","import { nanoid } from 'nanoid';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/contacts.selector';\nimport { addContact } from 'redux/contacts/operations';\nimport css from './PhoneForm.module.css';\n\nconst PhoneForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n\n  const handleAddContact = newContact => {\n    const hasDuplicates = contacts.some(\n      contact =>\n        contact.name.toLowerCase() === newContact.name.toLowerCase() ||\n        contact.phone === newContact.phone\n    );\n\n    if (hasDuplicates) {\n      alert(`Oops, contact with name '${newContact.name}' already exists!`);\n    } else {\n      dispatch(addContact(newContact));\n    }\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    const newContact = {\n      id: nanoid(),\n      name: name,\n      phone: phone,\n    };\n\n    handleAddContact(newContact);\n    setName('');\n    setPhone('');\n  };\n\n  const handleChange = e => {\n    if (e.target.name === 'name') {\n      setName(e.target.value);\n    } else if (e.target.name === 'phone') {\n      setPhone(e.target.value);\n    }\n  };\n\n  return (\n    <form action=\"\" className={css.form} onSubmit={handleSubmit}>\n      <label htmlFor=\"\" className={css.lable}>\n        <p className={css.titleLable}>Name</p>\n\n        <input\n          onChange={handleChange}\n          name=\"name\"\n          type=\"text\"\n          className={css.input}\n          value={name}\n          required\n        />\n      </label>\n      <p className={css.titleLable}>Number</p>\n      <label htmlFor=\"\" className={css.lable}>\n        <input\n          onChange={handleChange}\n          name=\"phone\"\n          type=\"text\"\n          className={css.input}\n          value={phone}\n        />\n      </label>\n      <button type=\"submit\" className={css.btnForm}>\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default PhoneForm;\n","import ContactList from 'components/ContactList/ContactList';\nimport { Container } from 'components/Container/Container';\nimport Filter from 'components/Filter/Filter';\nimport PhoneForm from 'components/PhoneForm/PhoneForm';\nimport React from 'react';\n\nconst Phonebook = () => {\n  return (\n    <div>\n      <Container title=\"Phonebook\">\n        <PhoneForm />\n      </Container>\n      <Container title=\"Search\">\n        <Filter />\n      </Container>\n      <Container title=\"Contacts\">\n        <ContactList />\n      </Container>\n    </div>\n  );\n};\n\nexport default Phonebook;\n","import Phonebook from 'components/PhoneBook/Phonebook';\nimport React from 'react';\n\nconst PhoneBookPage = () => {\n  return (\n    <div>\n      <Phonebook />\n    </div>\n  );\n};\n\nexport default PhoneBookPage;\n"],"names":["Container","title","children","className","css","selectContacts","state","contactsStore","contacts","items","selectContactsFilter","filter","selectVisibleContacts","createSelector","contact","name","toLowerCase","includes","dispatch","useDispatch","useSelector","useEffect","fetchContacts","length","map","id","phone","type","onClick","deleteContact","placeholder","value","onChange","e","newFilterValue","target","filteredContact","nanoid","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","useState","setName","setPhone","handleChange","action","onSubmit","evt","preventDefault","newContact","some","alert","addContact","handleAddContact","htmlFor","required"],"sourceRoot":""}