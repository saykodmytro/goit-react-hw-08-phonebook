{"version":3,"file":"static/js/903.6c50345a.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Container/Container.module.css?9f71","components/Container/Container.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","redux/contacts/contacts.selector.js","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","../node_modules/nanoid/index.browser.js","webpack://react-homework-template/./src/components/PhoneForm/PhoneForm.module.css?5704","components/PhoneForm/PhoneForm.jsx","pages/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Container_container__VVOCq\",\"title\":\"Container_title__uuJgB\"};","import css from './Container.module.css';\n\nexport const Container = ({ title, children }) => {\n  return (\n    <div className={css.container}>\n      <h1 className={css.title}>{title}</h1>\n      {children}\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"item\":\"ContactList_item__EZYHO\",\"descrList\":\"ContactList_descrList__lfROM\",\"btnDel\":\"ContactList_btnDel__M+VR9\"};","import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport css from './ContactList.module.css';\n\nconst ContactList = ({ contacts }) => {\n  const dispatch = useDispatch();\n  return (\n    <ul className={css.list}>\n      {contacts.length > 0 &&\n        contacts.map(({ id, name, number }) => (\n          <li key={id} className={css.item}>\n            <p className={css.descrList}>{name}</p>\n            <p className={css.descrList}>{number}</p>\n            <button\n              type=\"button\"\n              className={css.btnDel}\n              onClick={() => dispatch(deleteContact(id))}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contactsStore.contacts.items;\nexport const selectContactsIsLoading = state =>\n  state.contactsStore.contacts.isLoading;\nexport const selectContactsError = state => state.contactsStore.contacts.error;\nexport const selectContactsFilter = state => state.contactsStore.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectContactsFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Filter_input__N7T3z\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { filteredContact } from 'redux/contacts/contacts.reducer';\nimport { selectContactsFilter } from 'redux/contacts/contacts.selector';\n\nimport css from './Filter.module.css';\n\nexport const Filter = () => {\n  const filter = useSelector(selectContactsFilter);\n  const dispatch = useDispatch();\n\n  const handleFilterChange = e => {\n    const newFilterValue = e.target.value;\n    dispatch(filteredContact(newFilterValue));\n  };\n\n  return (\n    <label className={css.label}>\n      <input\n        className={css.input}\n        type=\"text\"\n        placeholder=\"Search\"\n        value={filter}\n        onChange={handleFilterChange}\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"PhoneForm_form__TuHnD\",\"lable\":\"PhoneForm_lable__6V1DN\",\"input\":\"PhoneForm_input__gtrkg\",\"titleLable\":\"PhoneForm_titleLable__MKS3L\",\"btnForm\":\"PhoneForm_btnForm__wCwNA\"};","import { nanoid } from 'nanoid';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/contacts.selector';\nimport { addContact } from 'redux/contacts/operations';\nimport css from './PhoneForm.module.css';\n\nconst PhoneForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleAddContact = newContact => {\n    const hasDuplicates = contacts.some(\n      contact =>\n        contact.name.toLowerCase() === newContact.name.toLowerCase() ||\n        contact.number === newContact.number\n    );\n\n    if (hasDuplicates) {\n      alert(`Oops, contact with name '${newContact.name}' already exists!`);\n    } else {\n      dispatch(addContact(newContact));\n    }\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    const newContact = {\n      id: nanoid(),\n      name: name,\n      number: number,\n    };\n\n    handleAddContact(newContact);\n    setName('');\n    setNumber('');\n  };\n\n  const handleChange = e => {\n    if (e.target.name === 'name') {\n      setName(e.target.value);\n    } else if (e.target.name === 'number') {\n      setNumber(e.target.value);\n    }\n  };\n\n  return (\n    <form action=\"\" className={css.form} onSubmit={handleSubmit}>\n      <label htmlFor=\"\" className={css.lable}>\n        <p className={css.titleLable}>Name</p>\n\n        <input\n          onChange={handleChange}\n          name=\"name\"\n          type=\"text\"\n          className={css.input}\n          value={name}\n          required\n        />\n      </label>\n      <p className={css.titleLable}>Number</p>\n      <label htmlFor=\"\" className={css.lable}>\n        <input\n          onChange={handleChange}\n          name=\"number\"\n          type=\"text\"\n          className={css.input}\n          value={number}\n        />\n      </label>\n      <button type=\"submit\" className={css.btnForm}>\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default PhoneForm;\n","import ContactList from 'components/ContactList/ContactList';\nimport { Container } from 'components/Container/Container';\nimport Filter from 'components/Filter/Filter';\nimport PhoneForm from 'components/PhoneForm/PhoneForm';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectVisibleContacts } from 'redux/contacts/contacts.selector';\n\nconst PhoneBookPage = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectVisibleContacts);\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <Container title=\"Phonebook\">\n        <PhoneForm />\n      </Container>\n      <Container title=\"Search\">\n        <Filter />\n      </Container>\n      <Container title=\"Contacts\">\n        <ContactList contacts={contacts} />\n      </Container>\n    </div>\n  );\n};\n\nexport default PhoneBookPage;\n"],"names":["Container","title","children","className","css","contacts","dispatch","useDispatch","length","map","id","name","number","type","onClick","deleteContact","selectContacts","state","contactsStore","items","selectContactsFilter","filter","selectVisibleContacts","createSelector","contact","toLowerCase","includes","useSelector","placeholder","value","onChange","e","newFilterValue","target","filteredContact","nanoid","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","useState","setName","setNumber","handleChange","action","onSubmit","evt","preventDefault","newContact","some","alert","addContact","handleAddContact","htmlFor","required","useEffect","fetchContacts"],"sourceRoot":""}